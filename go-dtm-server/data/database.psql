DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS attachment;
DROP TABLE IF EXISTS attachment_type;
DROP TABLE IF EXISTS task;
DROP TABLE IF EXISTS task_status;
DROP TABLE IF EXISTS task_type;
DROP TABLE IF EXISTS developer;


CREATE TABLE developer (
    id serial PRIMARY KEY,
    login text NOT NULL UNIQUE,
    password text NOT NULL,
    picture text NOT NULL DEFAULT '404.png',
    is_admin bool DEFAULT false,
    CHECK (LENGTH(login) > 6),
    CHECK (LENGTH(password) > 6)
);

CREATE TABLE task_type (
    id serial PRIMARY KEY,
    task_type_name text NOT NULL
);

CREATE TABLE task_status (
    id serial PRIMARY KEY,
    task_status_name text NOT NULL
);

CREATE TABLE task (
    id serial PRIMARY KEY,
    creator_id int NOT NULL,
    asignee_id int NOT NULL DEFAULT 1,
    task_type_id int NOT NULL DEFAULT 1,
    task_status_id int NOT NULL DEFAULT 1,
    title text NOT NULL,
    task_text text NOT NULL,
    creation_date int NOT NULL,
    start_date int DEFAULT 0,
    end_date int DEFAULT 0,
    update_date int DEFAULT 0,
    FOREIGN KEY (creator_id) REFERENCES developer(id) ON DELETE SET NULL,
    FOREIGN KEY (asignee_id) REFERENCES developer(id) ON DELETE SET NULL,
    FOREIGN KEY (task_type_id) REFERENCES task_type(id) ON DELETE CASCADE,
    FOREIGN KEY (task_status_id) REFERENCES task_status(id) ON DELETE SET NULL
);

CREATE TABLE attachment_type (
    id serial PRIMARY KEY,
    attachment_type_name text NOT NULL
);

CREATE TABLE attachment (
    id serial PRIMARY KEY,
    task_id int NOT NULL,
    attachment_type_id int,
    attachment_path text NOT NULL,
    creation_date int NOT NULL,
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE,
    FOREIGN KEY (attachment_type_id) REFERENCES attachment_type(id) ON DELETE SET NULL
);

CREATE TABLE comment (
    id serial PRIMARY KEY,
    developer_id int,
    task_id int NOT NULL,
    comment_text text,
    FOREIGN KEY (developer_id) REFERENCES developer(id) ON DELETE CASCADE,
    FOREIGN KEY (task_id) REFERENCES task(id) ON DELETE CASCADE
);



CREATE INDEX developer_id_idx ON developer(id);
CREATE INDEX attachment_id_idx ON attachment(id);
CREATE INDEX attachment_type_id_idx ON attachment_type(id);
CREATE INDEX comment_id_idx ON comment(id);
CREATE INDEX task_id_idx ON task(id);
CREATE INDEX task_Status_id_idx ON task_status(id);
CREATE INDEX task_type_id_idx ON task_type(id);
CREATE INDEX developer_login_idx ON developer(login);

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO sektor;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO sektor;
GRANT USAGE, UPDATE ON ALL SEQUENCES IN SCHEMA public TO sektor;

INSERT INTO task_type(task_type_name) VALUES('default');
INSERT INTO task_status(task_status_name) VALUES('default');
INSERT INTO developer(login, password) VALUES('default', 'default');